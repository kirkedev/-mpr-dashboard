name: Deploy App

permissions:
  id-token: write
  contents: read

on:
  push:
    tags:
      - v*

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          cache: yarn

      - name: Install dependencies
        run: yarn install

      - name: Setup AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE }}

      - name: Login to Amazon ECR
        id: login
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build docker images
        run: yarn build
        env:
          ECR_REGISTRY: ${{ steps.login.outputs.registry }}
          TAG: ${{ github.ref_name }}

      - name: Init docker swarm
        run: docker swarm init

      - name: Start app
        run: yarn start

      - name: Run smoke tests
        run: yarn workspace test smoke

      - name: Stop app
        if: always()
        run: yarn stop

      - name: Publish images to Amazon ECR
        run: |
          docker push $ECR_REGISTRY/mpr-api:$TAG
          docker push $ECR_REGISTRY/mpr-app:$TAG
        env:
          ECR_REGISTRY: ${{ steps.login.outputs.registry }}
          TAG: ${{ github.ref_name }}

      - name: Use Docker compose CLI
        run: curl -L https://raw.githubusercontent.com/docker/compose-cli/main/scripts/install/install_linux.sh | sh

      - name: Add ECS context
        run: docker context create ecs mpr --from-env

      - name: Deploy images to ECS
        run: docker --context mpr compose -f docker-compose.yaml --project-name mpr up
        env:
          ECR_REGISTRY: ${{ steps.login.outputs.registry }}
          TAG: ${{ github.ref_name }}
